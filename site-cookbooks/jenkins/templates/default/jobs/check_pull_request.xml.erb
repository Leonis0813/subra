<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs><%= @app_info[:app_name] %>-.*</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.12.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url><%= @app_info[:repository] %></url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
      <% if @app_info[:branch] == 'master' %>
        <name>:^(?!origin/master$).*</name>
      <% else %>
        <name>:^(?!origin/master$|origin/develop$).*</name>
      <% end %>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>* * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
        export PATH=/usr/local/rvm/bin:/usr/bin:/bin
        export DANGER_GITHUB_API_TOKEN=<%= @token %>
        export JENKINS_URL=http://localhost/jenkins/
        rvm <%= @app_info[:ruby_version] %> do bundle install --path=vendor/bundle --clean
        <% if @app_info[:app_name] == 'chort' %>
        export PATH=/usr/local/pyenv/versions/3.6.0/bin:/usr/local/pyenv/bin:/usr/local/rvm/bin:/usr/bin:/bin
        export PYENV_ROOT=/usr/local/pyenv
        eval "$(pyenv init -)" &amp;&amp; eval "$(pyenv virtualenv-init -)" &amp;&amp; pyenv activate sphinx &amp;&amp; make html
        bin/danger
        <% else %>
        export PRONTO_GITHUB_ACCESS_TOKEN=<%= @token %>
        export RUBOCOP_CONFIG=.rubocop.yml
        rvm <%= @app_info[:ruby_version] %> do bundle exec pronto run -f github_status github_pr -c origin/<%= @app_info[:branch] %>
        <% end %>
        <% if @app_info[:app_name] == 'regulus' %>
        rvm <%= @app_info[:ruby_version] %> do env COVERAGE=on bundle exec rspec spec/{models,controllers,views,lib}
        bin/danger
        <% elsif @app_info[:app_name] == 'alterf' %>
        rvm <%= @app_info[:ruby_version] %> do env RAILS_ENV=test bundle exec rake webpacker:compile:clean
        rvm <%= @app_info[:ruby_version] %> do env COVERAGE=on bundle exec rspec spec/{models,controllers,views,forms,lib}
        bin/danger
        <% elsif @app_info[:app_name] == 'algieba' %>
        rvm <%= @app_info[:ruby_version] %> do env COVERAGE=on bundle exec rspec spec/{models,controllers,views}
        bin/danger
        <% end %>
      </command>
    </hudson.tasks.Shell>
  </builders>
  <% if @app_info[:app_name] == 'chort' %>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>_build/html/**/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <% else %>
  <publishers/>
  <% end %>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.5.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
