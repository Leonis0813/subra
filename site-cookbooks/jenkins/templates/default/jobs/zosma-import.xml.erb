<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.34">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>TZ=UTC
0 0 * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>FROM</name>
          <description>format: yyyy-mm-dd</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TO</name>
          <description>format: yyyy-mm-dd</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BACKUP</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs>zosma-.*
.*-deploy</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Import Rates&apos;) {
            steps {
                build(
                    job: &apos;zosma-import-rates&apos;,
                    parameters: [
                        string(name: &apos;FROM&apos;, value: params.FROM),
                        string(name: &apos;TO&apos;, value: params.TO)
                    ]
                )
            }
        }

        stage(&apos;Import Candle Sticks&apos;) {
            steps {
                build(
                    job: &apos;zosma-import-candle_sticks&apos;,
                    parameters: [
                        string(name: &apos;FROM&apos;, value: params.FROM),
                        string(name: &apos;TO&apos;, value: params.TO)
                    ]
                )
            }
        }

        stage(&apos;Import Moving Averages&apos;) {
            steps {
                build(
                    job: &apos;zosma-import-moving_averages&apos;,
                    parameters: [
                        string(name: &apos;FROM&apos;, value: params.FROM),
                        string(name: &apos;TO&apos;, value: params.TO)
                    ]
                )
            }
        }

        stage(&apos;Backup&apos;) {
            when {
                expression { return params.BACKUP }
            }

            steps {
                build(
                    job: &apos;zosma-backup&apos;,
                    parameters: [
                        string(name: &apos;FROM&apos;, value: params.FROM),
                        string(name: &apos;TO&apos;, value: params.TO)
                    ]
                )
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
