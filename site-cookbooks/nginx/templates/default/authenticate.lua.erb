function create_random_string(length)
  local length = length or 0
  if length <= 0 then
    return nil
  end

  local random_string = {}
  if length > 0 then
    math.randomseed(os.time())
    math.random(1, 2) -- dummy
    for i= 1, length do
      local l = math.random(97,122) -- a~z
      local u = math.random(65,90)  -- A~Z
      local d = math.random(48,57)  -- 0~9
      local w = math.random(1,3)    -- l or u or d
      if w == 1 then table.insert(random_string, string.char(l)) end
      if w == 2 then table.insert(random_string, string.char(u)) end
      if w == 3 then table.insert(random_string, string.char(d)) end
    end
  end

  return table.concat(random_string, "")
end

ngx.req.read_body()
args = ngx.req.get_post_args()
if(args["user_id"] and args["password"]) then
  local user_id = args["user_id"]
  local password = args["password"]
  local mysql = require "resty.mysql"
  db, err = mysql:new()
  db:connect{
    host = "127.0.0.1",
    port = 3306,
    database = "account",
    user = "root",
    password = "<%= node[:mysql][:root_password] %>"
  }

  result, err, errno, sqlstate =
  db:query("SELECT COUNT(*) AS count FROM users WHERE user_id = '" .. user_id .. "' AND password = '" .. password .. "'")
  db:close()

  if(tonumber(result[1]["count"]) > 0) then
    ngx.header['Set-Cookie'] = 'LSID=' .. create_random_string(64) .. '; path=/'

    if(args["redirect_uri"] ~= "") then
      return ngx.redirect(args["redirect_uri"])
    else
      return ngx.redirect("/portal.html")
    end
  else
    if(args["redirect_uri"] ~= "") then
      return ngx.redirect("/login.html?redirect_uri=" .. ngx.escape_uri(args["redirect_uri"]))
    else
      return ngx.redirect("/login.html")
    end
  end
else
  return ngx.exit(404)
end
