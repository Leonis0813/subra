user nginx;
worker_processes 1;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;

  keepalive_timeout  65;

<% @nginx_apps.each do |app| %>
  upstream unicorn_<%= app %> {
    server unix:/opt/nginx/apps/<%= app %>/current/tmp/sockets/unicorn.sock;
  }
<% end %>

  lua_package_path "<%= node[:nginx][:lua_resty_mysql][:download][:dir] %>/lua-resty-mysql-<%= node[:nginx][:lua_resty_mysql][:version] %>/lib/?.lua";

  server {
    listen 80;
    server_name localhost;

    access_log /opt/nginx/logs/access.log;
    error_log /opt/nginx/logs/error.log;

    client_max_body_size 100m;

    include /opt/nginx/conf.d/*.conf;

    location = /authenticate {
      rewrite_by_lua_file "lua/authenticate.lua";
    }

  <% @nginx_apps.each do |app| %>
    location /<%= app %> {
      set $redirect_uri $uri$is_args$args;
      rewrite_by_lua_file "lua/login.lua";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://unicorn_<%= app %>/<%= app %>;
    }
    <% if app == 'regulus' %>
    location ^~ /regulus/analyses/result/ {
      limit_except GET { deny all; }
      set $redirect_uri $uri$is_args$args;
      rewrite_by_lua_file "lua/login.lua";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://localhost:6006;
    }
    <% end %>
  <% end %>
  }
}
